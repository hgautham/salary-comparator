{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["initialValues","salary","App","useState","atSalary","setatSalary","atSalaryTwo","setatSalaryTwo","clear","setClear","className","class","type","id","placeholder","list","name","value","onClick","e","preventDefault","document","querySelector","city","readOnly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wOAIMA,GCJS,I,MDIO,CACrBC,OAAQ,KAiGMC,MA9Ff,WAAgB,IAAD,EACaC,mBAASH,GADtB,gCAGaG,mBAAS,IAHtB,gCAIiBA,mBAAS,IAJ1B,mBAINC,EAJM,KAIGC,EAJH,OAMmBF,mBAAS,GAN5B,gCAOuBA,mBAAS,IAPhC,mBAONG,EAPM,KAOMC,EAPN,OAUUJ,oBAAS,GAVnB,mBAUNK,EAVM,KAUAC,EAVA,KAgDb,OACE,sBAAKC,UAAU,MAAf,UAEE,wBAAQA,UAAU,YAAlB,SACE,yDAKF,yBAAQA,UAAU,aAAlB,UAEA,sBAAKC,MAAM,cAAX,UACE,mDACA,iCACE,uBAAOC,KAAK,OAAOC,GAAG,MAAMC,YAAY,iBAAgB,uBACxD,uBAAOC,KAAK,SAASC,KAAK,SAASH,GAAG,SACtC,2BAAUA,GAAG,SAAb,UACE,wBAAQI,MAAM,gBACd,wBAAQA,MAAM,qBAEhB,wBAAQC,QAxDH,SAACC,GACZA,EAAEC,iBACCZ,GAAOC,GAAS,GACnB,IAAIR,EAAOoB,SAASC,cAAc,QAAQL,MACtCM,EAAKF,SAASC,cAAc,SAASL,MAC9B,IAARhB,GAUHI,EAPW,iBAARkB,EAMMtB,EAAkB,IAATA,EALPA,EAAkB,IAATA,IA+Cd,uBAA2C,uBAAM,uBACjD,sDACA,uBAAOW,KAAK,OAAOC,GAAG,SAASI,MAAOb,EAAWoB,UAAQ,IAAG,6BAIhE,sBAAKb,MAAM,cAAX,UACE,mDACA,iCACE,uBAAOC,KAAK,OAAOC,GAAG,OAAOC,YAAY,iBAAgB,uBACzD,uBAAOC,KAAK,SAASC,KAAK,SAASH,GAAG,UACtC,2BAAUA,GAAG,SAAb,UACE,wBAAQI,MAAM,gBACd,wBAAQA,MAAM,qBAEhB,wBAAQC,QArDA,SAACC,GACfA,EAAEC,iBACCZ,GAAOC,GAAS,GACnB,IAAIR,EAAOoB,SAASC,cAAc,SAASL,MACvCM,EAAKF,SAASC,cAAc,UAAUL,MAC/B,IAARhB,GAUHM,EAPW,iBAARgB,EAMMtB,EAAkB,IAATA,EALPA,EAAkB,IAATA,IA4Cd,uBAA8C,uBAAM,uBACpD,sDACA,uBAAOW,KAAK,OAAOC,GAAG,SAASI,MAAOX,EAAakB,UAAQ,IAAG,oCEjFzDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BZ,M","file":"static/js/main.acf64a48.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst initialValues = {\n\tsalary: '',\n}\n\nfunction App() {\n  const [state, setState] = useState(initialValues);\n\n  const [salary,setSalary]= useState(0);\n  const [atSalary,setatSalary]= useState(0);\n\n  const [salaryTwo,setSalaryTwo]= useState(0);\n  const [atSalaryTwo,setatSalaryTwo]= useState(0);\n\n\n  const [clear,setClear]=useState(false);\n\n  const Taxify=(e)=>{\n    e.preventDefault();\n    if(clear) setClear(false);\n    let salary=document.querySelector('#num').value\n    let city=document.querySelector('#city').value\n    if(salary=='')\n    return;\n\n    if(city == \"San Francisco\") {\n      let sum= salary - salary * .35;\n      setatSalary(sum);\n      return;\n    }\n\n    let sum= salary - salary * .25;\n    setatSalary(sum);\n  }\n\n  const TaxifyTwo=(e)=>{\n    e.preventDefault();\n    if(clear) setClear(false);\n    let salary=document.querySelector('#num2').value\n    let city=document.querySelector('#city2').value\n    if(salary=='')\n    return;\n\n    if(city == \"San Francisco\") {\n      let sum= salary - salary * .35;\n      setatSalaryTwo(sum);\n      return;\n    }\n\n    let sum= salary - salary * .25;\n    setatSalaryTwo(sum);\n  }\n\n  return (\n    <div className=\"App\">\n\n      <header className=\"My-header\">\n        <p>\n          Salary comparison tool\n        </p>\n      </header>\n\n      <header className=\"App-header\">\n\n      <div class=\"float-child\">\n        <p> select city one: </p>\n        <form>\n          <input type=\"text\" id=\"num\" placeholder=\"Enter Salary\"/><br />\n          <input list=\"cities\" name=\"cities\" id=\"city\"/>\n          <datalist id=\"cities\">\n            <option value=\"Kansas city\" />\n            <option value=\"San Francisco\" />\n          </datalist>\n          <button onClick={Taxify}>Calculate</button><br /><br />\n          <button>After Tax income</button>\n          <input type=\"text\" id=\"result\" value={atSalary}  readOnly /><br/>\n        </form>\n      </div>\n\n      <div class=\"float-child\">\n        <p> select city two: </p>\n        <form>\n          <input type=\"text\" id=\"num2\" placeholder=\"Enter Salary\"/><br />\n          <input list=\"cities\" name=\"cities\" id=\"city2\"/>\n          <datalist id=\"cities\">\n            <option value=\"Kansas city\" />\n            <option value=\"San Francisco\" />\n          </datalist>\n          <button onClick={TaxifyTwo}>Calculate</button><br /><br />\n          <button>After Tax income</button>\n          <input type=\"text\" id=\"result\" value={atSalaryTwo} readOnly /><br/>\n        </form>\n      </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}